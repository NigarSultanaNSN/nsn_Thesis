# -*- coding: utf-8 -*-
"""Image-cropping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v_Y2bIsZs5bitfzXFC7MiBrgk3VGkQdT
"""

import os
import cv2
import numpy as np
import matplotlib.pyplot as plt
import numpy as np
import nibabel as nib
import glob
import matplotlib.pyplot as plt
import random
from sklearn.preprocessing import MinMaxScaler
scaler= MinMaxScaler()

data_path= "D:/MRI/Sample Dataset/BraTS20_Training_151"
test_image_T1= nib.load(data_path + "/BraTS20_Training_151_t1.nii").get_fdata()

n_slice = 104
plt.imshow(test_image_T1[:,:,n_slice], cmap='gray')
plt.title('Image T1')

plt.show()

img = test_image_T1[:,:,n_slice]
img.shape

image = np.where(img > 0, 1, 0)
plt.imshow(image, interpolation='nearest')
plt.show()

structure = np.array([
    [1,1,1],
    [1,1,1],
    [1,1,1]
])
import scipy.ndimage.measurements as mnts
bboxSlices = {}
for i in range(1, image.max() + 1):
    B = image.copy()
    B[B != i] = 0

    bboxSlices[i] = mnts.find_objects(mnts.label(B, structure=structure)[0])

print(bboxSlices)

bboxes = []
for bboxslices in bboxSlices[1]:
    bbox = []
    for slice in bboxslices:
        bbox.append(slice.start)
        bbox.append(slice.stop)
    bboxes.append(bbox)

bboxes

bboxes_np = np.array(bboxes, dtype=np.float32)

bboxes_np

ymin = np.min(bboxes_np[:,0])
ymax = np.max(bboxes_np[:,1])
xmin = np.min(bboxes_np[:,2])
xmax = np.max(bboxes_np[:,3])

print('ymin=', ymin)
print('ymax=', ymax)
print('xmin=', xmin)
print('xmax=', xmax)

crop = image[int(ymin):int(ymax), int(xmin):int(xmax)]

plt.imshow(crop, interpolation='nearest')
plt.show()

test_mask= nib.load(data_path + "/BraTS20_Training_151_seg.nii").get_fdata()
seg_img = test_mask[:,:,n_slice]
crop_seg = seg_img[int(ymin):int(ymax), int(xmin):int(xmax)]
plt.imshow(crop_seg, interpolation='nearest')
plt.show()